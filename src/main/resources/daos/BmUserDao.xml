<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jmu.bibasedmanage.dao.BmUserDao">
  <resultMap id="BaseResultMap" type="com.jmu.bibasedmanage.pojo.BmUser">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="login_password" jdbcType="VARCHAR" property="loginPassword" />
    <result column="salt" jdbcType="VARCHAR" property="salt" />
    <result column="user_status" jdbcType="VARCHAR" property="userStatus" />
    <result column="user_lock_time" jdbcType="TIMESTAMP" property="userLockTime" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="ts_id" jdbcType="VARCHAR" property="tsId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, role_id, login_name, login_password, salt, user_status, user_lock_time, last_login_time, 
    ts_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bm_user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from bm_user
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.jmu.bibasedmanage.pojo.BmUser">
    insert into bm_user (id, role_id, login_name, 
      login_password, salt, user_status, 
      user_lock_time, last_login_time, ts_id
      )
    values (#{id,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, 
      #{loginPassword,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR}, #{userStatus,jdbcType=VARCHAR}, 
      #{userLockTime,jdbcType=TIMESTAMP}, #{lastLoginTime,jdbcType=TIMESTAMP}, #{tsId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jmu.bibasedmanage.pojo.BmUser">
    insert into bm_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="loginName != null">
        login_name,
      </if>
      <if test="loginPassword != null">
        login_password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="userStatus != null">
        user_status,
      </if>
      <if test="userLockTime != null">
        user_lock_time,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="tsId != null">
        ts_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null">
        #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null">
        #{userStatus,jdbcType=VARCHAR},
      </if>
      <if test="userLockTime != null">
        #{userLockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tsId != null">
        #{tsId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jmu.bibasedmanage.pojo.BmUser">
    update bm_user
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=VARCHAR},
      </if>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="loginPassword != null">
        login_password = #{loginPassword,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="userStatus != null">
        user_status = #{userStatus,jdbcType=VARCHAR},
      </if>
      <if test="userLockTime != null">
        user_lock_time = #{userLockTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tsId != null">
        ts_id = #{tsId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jmu.bibasedmanage.pojo.BmUser">
    update bm_user
    set role_id = #{roleId,jdbcType=VARCHAR},
      login_name = #{loginName,jdbcType=VARCHAR},
      login_password = #{loginPassword,jdbcType=VARCHAR},
      salt = #{salt,jdbcType=VARCHAR},
      user_status = #{userStatus,jdbcType=VARCHAR},
      user_lock_time = #{userLockTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      ts_id = #{tsId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByLoginName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from bm_user
    where login_name = #{0} and user_status = "NORMAL"
  </select>
  <select id="selectCurrentByLoginName" parameterType="java.lang.String" resultType="com.jmu.bibasedmanage.vo.CurrentUser">
    select bu.id as id,bu.login_name as loginName,bu.login_password as loginPassword,bu.salt as salt, bu.role_id as roleId,
    bu.ts_id as tsId, br.name as roleName, br.remark as roleRemark
    from bm_user bu left join bm_role br on bu.role_id=br.id
    where bu.login_name=#{loginName}
  </select>

  <select id="selectByPage" resultMap="BaseResultMap" parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from bm_user
    where 1=1
    <if test="keyword != null and keyword != ''">
      and login_name like concat("%", #{keyword}, "%")
    </if>
    order by create_time desc
  </select>
</mapper>